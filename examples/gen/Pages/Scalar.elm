-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Pages.Scalar exposing (Codecs, Upload(..), defaultCodecs, defineCodecs, unwrapCodecs, unwrapEncoder)

import Graphql.Codec exposing (Codec)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode
import Json.Decode as Decode exposing (Decoder)
import Json.Encode as Encode


type Upload
    = Upload String


defineCodecs :
    { codecUpload : Codec valueUpload }
    -> Codecs valueUpload
defineCodecs definitions =
    Codecs definitions


unwrapCodecs :
    Codecs valueUpload
    -> { codecUpload : Codec valueUpload }
unwrapCodecs (Codecs unwrappedCodecs) =
    unwrappedCodecs


unwrapEncoder getter (Codecs unwrappedCodecs) =
    (unwrappedCodecs |> getter |> .encoder) >> Graphql.Internal.Encode.fromJson


type Codecs valueUpload
    = Codecs (RawCodecs valueUpload)


type alias RawCodecs valueUpload =
    { codecUpload : Codec valueUpload }


defaultCodecs : RawCodecs Upload
defaultCodecs =
    { codecUpload =
        { encoder = \(Upload raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Upload
        }
    }
