-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql
module GithubNoFormat.Object.Ref exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.SelectionSet exposing (SelectionSet)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import GithubNoFormat.Object
import GithubNoFormat.Interface
import GithubNoFormat.Union
import GithubNoFormat.Scalar
import GithubNoFormat.InputObject
import GithubNoFormat.ScalarCodecs
import Json.Decode as Decode
import Graphql.Internal.Encode as Encode exposing (Value)
import GithubNoFormat.Enum.PullRequestState
type alias AssociatedPullRequestsOptionalArguments = { first : OptionalArgument (Int)
 , after : OptionalArgument (String)
 , last : OptionalArgument (Int)
 , before : OptionalArgument (String)
 , states : OptionalArgument (List GithubNoFormat.Enum.PullRequestState.PullRequestState)
 , labels : OptionalArgument (List String)
 , headRefName : OptionalArgument (String)
 , baseRefName : OptionalArgument (String)
 , orderBy : OptionalArgument (GithubNoFormat.InputObject.IssueOrder) }

{-| A list of pull requests with this ref as the head ref.

  - first - Returns the first _n_ elements from the list.
  - after - Returns the elements in the list that come after the specified global ID.
  - last - Returns the last _n_ elements from the list.
  - before - Returns the elements in the list that come before the specified global ID.
  - states - A list of states to filter the pull requests by.
  - labels - A list of label names to filter the pull requests by.
  - headRefName - The head ref name to filter the pull requests by.
  - baseRefName - The base ref name to filter the pull requests by.
  - orderBy - Ordering options for pull requests returned from the connection.

-}
associatedPullRequests : (AssociatedPullRequestsOptionalArguments -> AssociatedPullRequestsOptionalArguments)
 -> SelectionSet decodesTo GithubNoFormat.Object.PullRequestConnection
 -> SelectionSet (decodesTo) GithubNoFormat.Object.Ref
associatedPullRequests fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { first = Absent, after = Absent, last = Absent, before = Absent, states = Absent, labels = Absent, headRefName = Absent, baseRefName = Absent, orderBy = Absent }

        optionalArgs____ =
            [ Argument.optional "first" filledInOptionals____.first (Encode.int), Argument.optional "after" filledInOptionals____.after (Encode.string), Argument.optional "last" filledInOptionals____.last (Encode.int), Argument.optional "before" filledInOptionals____.before (Encode.string), Argument.optional "states" filledInOptionals____.states ((Encode.enum GithubNoFormat.Enum.PullRequestState.toString) |> Encode.list), Argument.optional "labels" filledInOptionals____.labels (Encode.string |> Encode.list), Argument.optional "headRefName" filledInOptionals____.headRefName (Encode.string), Argument.optional "baseRefName" filledInOptionals____.baseRefName (Encode.string), Argument.optional "orderBy" filledInOptionals____.orderBy (GithubNoFormat.InputObject.encodeIssueOrder) ]
                |> List.filterMap Basics.identity
    in
      Object.selectionForCompositeField "associatedPullRequests" optionalArgs____ (object____) (Basics.identity)


id : SelectionSet (GithubNoFormat.ScalarCodecs.Id) GithubNoFormat.Object.Ref
id =
      Object.selectionForField "(ScalarCodecs.Id)" "id" [] (GithubNoFormat.ScalarCodecs.codecs |> GithubNoFormat.Scalar.unwrapCodecs |> .codecId |> .decoder)


{-| The ref name.
-}
name : SelectionSet (String) GithubNoFormat.Object.Ref
name =
      Object.selectionForField "(String)" "name" [] (Decode.string)


{-| The ref's prefix, such as `refs/heads/` or `refs/tags/`.
-}
prefix : SelectionSet (String) GithubNoFormat.Object.Ref
prefix =
      Object.selectionForField "(String)" "prefix" [] (Decode.string)


{-| The repository the ref belongs to.
-}
repository : SelectionSet decodesTo GithubNoFormat.Object.Repository
 -> SelectionSet (decodesTo) GithubNoFormat.Object.Ref
repository object____ =
      Object.selectionForCompositeField "repository" [] (object____) (Basics.identity)


{-| The object the ref points to.
-}
target : SelectionSet decodesTo GithubNoFormat.Interface.GitObject
 -> SelectionSet (decodesTo) GithubNoFormat.Object.Ref
target object____ =
      Object.selectionForCompositeField "target" [] (object____) (Basics.identity)
