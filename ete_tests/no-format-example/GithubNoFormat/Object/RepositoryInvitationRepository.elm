-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql
module GithubNoFormat.Object.RepositoryInvitationRepository exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.SelectionSet exposing (SelectionSet)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import GithubNoFormat.Object
import GithubNoFormat.Interface
import GithubNoFormat.Union
import GithubNoFormat.Scalar
import GithubNoFormat.InputObject
import GithubNoFormat.ScalarCodecs
import Json.Decode as Decode
import Graphql.Internal.Encode as Encode exposing (Value)
import GithubNoFormat.Enum.RepositoryLockReason
{-| Identifies the date and time when the object was created.
-}
createdAt : SelectionSet GithubNoFormat.ScalarCodecs.DateTime GithubNoFormat.Object.RepositoryInvitationRepository
createdAt =
      Object.selectionForField "ScalarCodecs.DateTime" "createdAt" [] (GithubNoFormat.ScalarCodecs.codecs |> GithubNoFormat.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


{-| The description of the repository.
-}
description : SelectionSet (Maybe String) GithubNoFormat.Object.RepositoryInvitationRepository
description =
      Object.selectionForField "(Maybe String)" "description" [] (Decode.string |> Decode.nullable)


{-| The description of the repository rendered to HTML.
-}
descriptionHTML : SelectionSet GithubNoFormat.ScalarCodecs.Html GithubNoFormat.Object.RepositoryInvitationRepository
descriptionHTML =
      Object.selectionForField "ScalarCodecs.Html" "descriptionHTML" [] (GithubNoFormat.ScalarCodecs.codecs |> GithubNoFormat.Scalar.unwrapCodecs |> .codecHtml |> .decoder)


{-| Returns how many forks there are of this repository in the whole network.
-}
forkCount : SelectionSet Int GithubNoFormat.Object.RepositoryInvitationRepository
forkCount =
      Object.selectionForField "Int" "forkCount" [] (Decode.int)


{-| Indicates if the repository has issues feature enabled.
-}
hasIssuesEnabled : SelectionSet Bool GithubNoFormat.Object.RepositoryInvitationRepository
hasIssuesEnabled =
      Object.selectionForField "Bool" "hasIssuesEnabled" [] (Decode.bool)


{-| Indicates if the repository has wiki feature enabled.
-}
hasWikiEnabled : SelectionSet Bool GithubNoFormat.Object.RepositoryInvitationRepository
hasWikiEnabled =
      Object.selectionForField "Bool" "hasWikiEnabled" [] (Decode.bool)


{-| The repository's URL.
-}
homepageUrl : SelectionSet (Maybe GithubNoFormat.ScalarCodecs.Uri) GithubNoFormat.Object.RepositoryInvitationRepository
homepageUrl =
      Object.selectionForField "(Maybe ScalarCodecs.Uri)" "homepageUrl" [] (GithubNoFormat.ScalarCodecs.codecs |> GithubNoFormat.Scalar.unwrapCodecs |> .codecUri |> .decoder |> Decode.nullable)


{-| Indicates if the repository is unmaintained.
-}
isArchived : SelectionSet Bool GithubNoFormat.Object.RepositoryInvitationRepository
isArchived =
      Object.selectionForField "Bool" "isArchived" [] (Decode.bool)


{-| Identifies if the repository is a fork.
-}
isFork : SelectionSet Bool GithubNoFormat.Object.RepositoryInvitationRepository
isFork =
      Object.selectionForField "Bool" "isFork" [] (Decode.bool)


{-| Indicates if the repository has been locked or not.
-}
isLocked : SelectionSet Bool GithubNoFormat.Object.RepositoryInvitationRepository
isLocked =
      Object.selectionForField "Bool" "isLocked" [] (Decode.bool)


{-| Identifies if the repository is a mirror.
-}
isMirror : SelectionSet Bool GithubNoFormat.Object.RepositoryInvitationRepository
isMirror =
      Object.selectionForField "Bool" "isMirror" [] (Decode.bool)


{-| Identifies if the repository is private.
-}
isPrivate : SelectionSet Bool GithubNoFormat.Object.RepositoryInvitationRepository
isPrivate =
      Object.selectionForField "Bool" "isPrivate" [] (Decode.bool)


{-| The license associated with the repository
@deprecated Field `license` will be replaced by a more detailed license object. Use `Repository.licenseInfo` instead. Removal on 2018-07-01 UTC.
-}
license : SelectionSet (Maybe String) GithubNoFormat.Object.RepositoryInvitationRepository
license =
      Object.selectionForField "(Maybe String)" "license" [] (Decode.string |> Decode.nullable)


{-| The license associated with the repository
-}
licenseInfo : SelectionSet decodesTo GithubNoFormat.Object.License
 -> SelectionSet (Maybe decodesTo) GithubNoFormat.Object.RepositoryInvitationRepository
licenseInfo object____ =
      Object.selectionForCompositeField "licenseInfo" [] (object____) (Basics.identity >> Decode.nullable)


{-| The reason the repository has been locked.
-}
lockReason : SelectionSet (Maybe GithubNoFormat.Enum.RepositoryLockReason.RepositoryLockReason) GithubNoFormat.Object.RepositoryInvitationRepository
lockReason =
      Object.selectionForField "(Maybe Enum.RepositoryLockReason.RepositoryLockReason)" "lockReason" [] (GithubNoFormat.Enum.RepositoryLockReason.decoder |> Decode.nullable)


{-| The repository's original mirror URL.
-}
mirrorUrl : SelectionSet (Maybe GithubNoFormat.ScalarCodecs.Uri) GithubNoFormat.Object.RepositoryInvitationRepository
mirrorUrl =
      Object.selectionForField "(Maybe ScalarCodecs.Uri)" "mirrorUrl" [] (GithubNoFormat.ScalarCodecs.codecs |> GithubNoFormat.Scalar.unwrapCodecs |> .codecUri |> .decoder |> Decode.nullable)


{-| The name of the repository.
-}
name : SelectionSet String GithubNoFormat.Object.RepositoryInvitationRepository
name =
      Object.selectionForField "String" "name" [] (Decode.string)


{-| The repository's name with owner.
-}
nameWithOwner : SelectionSet String GithubNoFormat.Object.RepositoryInvitationRepository
nameWithOwner =
      Object.selectionForField "String" "nameWithOwner" [] (Decode.string)


{-| The owner of the repository associated with this invitation repository.
-}
owner : SelectionSet decodesTo GithubNoFormat.Interface.RepositoryOwner
 -> SelectionSet decodesTo GithubNoFormat.Object.RepositoryInvitationRepository
owner object____ =
      Object.selectionForCompositeField "owner" [] (object____) (Basics.identity)


{-| Identifies when the repository was last pushed to.
-}
pushedAt : SelectionSet (Maybe GithubNoFormat.ScalarCodecs.DateTime) GithubNoFormat.Object.RepositoryInvitationRepository
pushedAt =
      Object.selectionForField "(Maybe ScalarCodecs.DateTime)" "pushedAt" [] (GithubNoFormat.ScalarCodecs.codecs |> GithubNoFormat.Scalar.unwrapCodecs |> .codecDateTime |> .decoder |> Decode.nullable)


{-| The HTTP path for this repository
-}
resourcePath : SelectionSet GithubNoFormat.ScalarCodecs.Uri GithubNoFormat.Object.RepositoryInvitationRepository
resourcePath =
      Object.selectionForField "ScalarCodecs.Uri" "resourcePath" [] (GithubNoFormat.ScalarCodecs.codecs |> GithubNoFormat.Scalar.unwrapCodecs |> .codecUri |> .decoder)


type alias ShortDescriptionHTMLOptionalArguments = { limit : OptionalArgument Int }

{-| A description of the repository, rendered to HTML without any links in it.

  - limit - How many characters to return.

-}
shortDescriptionHTML : (ShortDescriptionHTMLOptionalArguments -> ShortDescriptionHTMLOptionalArguments)
 -> SelectionSet GithubNoFormat.ScalarCodecs.Html GithubNoFormat.Object.RepositoryInvitationRepository
shortDescriptionHTML fillInOptionals____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { limit = Absent }

        optionalArgs____ =
            [ Argument.optional "limit" filledInOptionals____.limit (Encode.int) ]
                |> List.filterMap Basics.identity
    in
      Object.selectionForField "ScalarCodecs.Html" "shortDescriptionHTML" optionalArgs____ (GithubNoFormat.ScalarCodecs.codecs |> GithubNoFormat.Scalar.unwrapCodecs |> .codecHtml |> .decoder)


{-| Identifies the date and time when the object was last updated.
@deprecated General type updated timestamps will eventually be replaced by other field specific timestamps. Removal on 2018-07-01 UTC.
-}
updatedAt : SelectionSet GithubNoFormat.ScalarCodecs.DateTime GithubNoFormat.Object.RepositoryInvitationRepository
updatedAt =
      Object.selectionForField "ScalarCodecs.DateTime" "updatedAt" [] (GithubNoFormat.ScalarCodecs.codecs |> GithubNoFormat.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


{-| The HTTP URL for this repository
-}
url : SelectionSet GithubNoFormat.ScalarCodecs.Uri GithubNoFormat.Object.RepositoryInvitationRepository
url =
      Object.selectionForField "ScalarCodecs.Uri" "url" [] (GithubNoFormat.ScalarCodecs.codecs |> GithubNoFormat.Scalar.unwrapCodecs |> .codecUri |> .decoder)
