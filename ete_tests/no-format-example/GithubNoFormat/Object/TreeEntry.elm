-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql
module GithubNoFormat.Object.TreeEntry exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.SelectionSet exposing (SelectionSet)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import GithubNoFormat.Object
import GithubNoFormat.Interface
import GithubNoFormat.Union
import GithubNoFormat.Scalar
import GithubNoFormat.InputObject
import GithubNoFormat.ScalarCodecs
import Json.Decode as Decode
import Graphql.Internal.Encode as Encode exposing (Value)

{-| Entry file mode.
-}
mode : SelectionSet (Int) GithubNoFormat.Object.TreeEntry
mode =
      Object.selectionForField "(Int)" "mode" [] (Decode.int)


{-| Entry file name.
-}
name : SelectionSet (String) GithubNoFormat.Object.TreeEntry
name =
      Object.selectionForField "(String)" "name" [] (Decode.string)


{-| Entry file object.
-}
object : SelectionSet decodesTo GithubNoFormat.Interface.GitObject
 -> SelectionSet (Maybe decodesTo) GithubNoFormat.Object.TreeEntry
object object____ =
      Object.selectionForCompositeField "object" [] (object____) (Basics.identity >> Decode.nullable)


{-| Entry file Git object ID.
-}
oid : SelectionSet (GithubNoFormat.ScalarCodecs.GitObjectID) GithubNoFormat.Object.TreeEntry
oid =
      Object.selectionForField "(ScalarCodecs.GitObjectID)" "oid" [] (GithubNoFormat.ScalarCodecs.codecs |> GithubNoFormat.Scalar.unwrapCodecs |> .codecGitObjectID |> .decoder)


{-| The Repository the tree entry belongs to
-}
repository : SelectionSet decodesTo GithubNoFormat.Object.Repository
 -> SelectionSet (decodesTo) GithubNoFormat.Object.TreeEntry
repository object____ =
      Object.selectionForCompositeField "repository" [] (object____) (Basics.identity)


{-| Entry file type.
-}
type_ : SelectionSet (String) GithubNoFormat.Object.TreeEntry
type_ =
      Object.selectionForField "(String)" "type" [] (Decode.string)
